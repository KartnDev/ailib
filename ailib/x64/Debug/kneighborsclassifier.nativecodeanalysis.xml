<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\documents\github\ailib\ailib</FILEPATH>
      <FILENAME>kneighborsclassifier.cpp</FILENAME>
      <LINE>4</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'KNeighborsClassifier::trainPointDim' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>KNeighborsClassifier::{ctor}</FUNCTION>
    <DECORATED>??0KNeighborsClassifier@@QEAA@XZ</DECORATED>
    <FUNCLINE>4</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\documents\github\ailib\ailib</FILEPATH>
      <FILENAME>kneighborsclassifier.cpp</FILENAME>
      <LINE>4</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'KNeighborsClassifier::trainPointsSize' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>KNeighborsClassifier::{ctor}</FUNCTION>
    <DECORATED>??0KNeighborsClassifier@@QEAA@XZ</DECORATED>
    <FUNCLINE>4</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\documents\github\ailib\ailib</FILEPATH>
      <FILENAME>kneighborsclassifier.cpp</FILENAME>
      <LINE>9</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'KNeighborsClassifier::trainPointDim' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>KNeighborsClassifier::{ctor}</FUNCTION>
    <DECORATED>??0KNeighborsClassifier@@QEAA@H@Z</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\documents\github\ailib\ailib</FILEPATH>
      <FILENAME>kneighborsclassifier.cpp</FILENAME>
      <LINE>9</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'KNeighborsClassifier::trainPointsSize' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>KNeighborsClassifier::{ctor}</FUNCTION>
    <DECORATED>??0KNeighborsClassifier@@QEAA@H@Z</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\documents\github\ailib\ailib</FILEPATH>
      <FILENAME>kneighborsclassifier.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>KNeighborsClassifier::Predict</FUNCTION>
    <DECORATED>?Predict@KNeighborsClassifier@@QEAAHV?$vector@HV?$allocator@H@std@@@std@@@Z</DECORATED>
    <FUNCLINE>27</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\documents\github\ailib\ailib</FILEPATH>
      <FILENAME>kneighborsclassifier.cpp</FILENAME>
      <LINE>77</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>KNeighborsClassifier::Predict</FUNCTION>
    <DECORATED>?Predict@KNeighborsClassifier@@QEAA?AV?$vector@HV?$allocator@H@std@@@std@@V?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@3@@Z</DECORATED>
    <FUNCLINE>67</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>