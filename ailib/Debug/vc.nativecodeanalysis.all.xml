<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>ailib.cpp</FILENAME>
      <LINE>32</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function '&lt;lambda_f8f77e05ff693e21b14e5afcba62da35&gt;::operator()' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>ktstd::models::KNearestNeighbors::GetNearestK::&lt;lambda_f8f77e05ff693e21b14e5afcba62da35&gt;::()</FUNCTION>
    <DECORATED>??R&lt;lambda_f8f77e05ff693e21b14e5afcba62da35&gt;@@QBEIV?$tuple@V?$vector@NV?$allocator@N@std@@@std@@NN@std@@0@Z</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>ailib.cpp</FILENAME>
      <LINE>20</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '&amp;this-&gt;trainData'. 'this.ktstd::models::KNearestNeighbors::trainData' may have been invalidated at line 24 (lifetime.1).</DESCRIPTION>
    <FUNCTION>ktstd::models::KNearestNeighbors::GetNearestK</FUNCTION>
    <DECORATED>?GetNearestK@KNearestNeighbors@models@ktstd@@QBEPAV?$vector@V?$tuple@V?$vector@NV?$allocator@N@std@@@std@@NN@std@@V?$allocator@V?$tuple@V?$vector@NV?$allocator@N@std@@@std@@NN@std@@@2@@std@@AAV?$vector@NV?$allocator@N@std@@@5@@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
        <FILENAME>ailib.cpp</FILENAME>
        <LINE>24</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>ailib.cpp</FILENAME>
      <LINE>24</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '&amp;this-&gt;trainData'. 'this.ktstd::models::KNearestNeighbors::trainData' may have been invalidated at line 24 (lifetime.1).</DESCRIPTION>
    <FUNCTION>ktstd::models::KNearestNeighbors::GetNearestK</FUNCTION>
    <DECORATED>?GetNearestK@KNearestNeighbors@models@ktstd@@QBEPAV?$vector@V?$tuple@V?$vector@NV?$allocator@N@std@@@std@@NN@std@@V?$allocator@V?$tuple@V?$vector@NV?$allocator@N@std@@@std@@NN@std@@@2@@std@@AAV?$vector@NV?$allocator@N@std@@@5@@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
        <FILENAME>ailib.cpp</FILENAME>
        <LINE>24</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>ailib.cpp</FILENAME>
      <LINE>24</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*result.[]'. 'return of '[]'' may have been invalidated at line 24 (lifetime.1).</DESCRIPTION>
    <FUNCTION>ktstd::models::KNearestNeighbors::GetNearestK</FUNCTION>
    <DECORATED>?GetNearestK@KNearestNeighbors@models@ktstd@@QBEPAV?$vector@V?$tuple@V?$vector@NV?$allocator@N@std@@@std@@NN@std@@V?$allocator@V?$tuple@V?$vector@NV?$allocator@N@std@@@std@@NN@std@@@2@@std@@AAV?$vector@NV?$allocator@N@std@@@5@@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
        <FILENAME>ailib.cpp</FILENAME>
        <LINE>24</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>ailib.cpp</FILENAME>
      <LINE>24</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 1 '{InvalidLoc}' in call to 'std::tuple&lt;std::vector&lt;double,std::allocator&lt;double&gt; &gt;,double,double&gt;::tuple&lt;std::vector&lt;double,std::allocator&lt;double&gt; &gt;,double,double&gt;&lt;std::vector&lt;double,std::allocator&lt;double&gt; &gt; const &amp;,double &amp;,double const &amp;,0&gt;' may be invalid (lifetime.1).</DESCRIPTION>
    <FUNCTION>ktstd::models::KNearestNeighbors::GetNearestK</FUNCTION>
    <DECORATED>?GetNearestK@KNearestNeighbors@models@ktstd@@QBEPAV?$vector@V?$tuple@V?$vector@NV?$allocator@N@std@@@std@@NN@std@@V?$allocator@V?$tuple@V?$vector@NV?$allocator@N@std@@@std@@NN@std@@@2@@std@@AAV?$vector@NV?$allocator@N@std@@@5@@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
        <FILENAME>ailib.cpp</FILENAME>
        <LINE>24</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>ailib.cpp</FILENAME>
      <LINE>41</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.GetNearestK'. 'return of 'GetNearestK'' may have been invalidated at line 39 (lifetime.1).</DESCRIPTION>
    <FUNCTION>ktstd::models::KNearestNeighbors::GetNearestK</FUNCTION>
    <DECORATED>?GetNearestK@KNearestNeighbors@models@ktstd@@QBEPAV?$vector@V?$tuple@V?$vector@NV?$allocator@N@std@@@std@@NN@std@@V?$allocator@V?$tuple@V?$vector@NV?$allocator@N@std@@@std@@NN@std@@@2@@std@@AAV?$vector@NV?$allocator@N@std@@@5@@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
        <FILENAME>ailib.cpp</FILENAME>
        <LINE>39</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>ailib.cpp</FILENAME>
      <LINE>39</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26487</DEFECTCODE>
    <DESCRIPTION>Don't return a pointer that may be invalid (lifetime.1).</DESCRIPTION>
    <FUNCTION>ktstd::models::KNearestNeighbors::GetNearestK</FUNCTION>
    <DECORATED>?GetNearestK@KNearestNeighbors@models@ktstd@@QBEPAV?$vector@V?$tuple@V?$vector@NV?$allocator@N@std@@@std@@NN@std@@V?$allocator@V?$tuple@V?$vector@NV?$allocator@N@std@@@std@@NN@std@@@2@@std@@AAV?$vector@NV?$allocator@N@std@@@5@@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
        <FILENAME>ailib.cpp</FILENAME>
        <LINE>39</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>ailib.cpp</FILENAME>
      <LINE>22</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ktstd::models::KNearestNeighbors::GetNearestK</FUNCTION>
    <DECORATED>?GetNearestK@KNearestNeighbors@models@ktstd@@QBEPAV?$vector@V?$tuple@V?$vector@NV?$allocator@N@std@@@std@@NN@std@@V?$allocator@V?$tuple@V?$vector@NV?$allocator@N@std@@@std@@NN@std@@@2@@std@@AAV?$vector@NV?$allocator@N@std@@@5@@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>ailib.cpp</FILENAME>
      <LINE>24</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ktstd::models::KNearestNeighbors::GetNearestK</FUNCTION>
    <DECORATED>?GetNearestK@KNearestNeighbors@models@ktstd@@QBEPAV?$vector@V?$tuple@V?$vector@NV?$allocator@N@std@@@std@@NN@std@@V?$allocator@V?$tuple@V?$vector@NV?$allocator@N@std@@@std@@NN@std@@@2@@std@@AAV?$vector@NV?$allocator@N@std@@@5@@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>ailib.cpp</FILENAME>
      <LINE>24</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ktstd::models::KNearestNeighbors::GetNearestK</FUNCTION>
    <DECORATED>?GetNearestK@KNearestNeighbors@models@ktstd@@QBEPAV?$vector@V?$tuple@V?$vector@NV?$allocator@N@std@@@std@@NN@std@@V?$allocator@V?$tuple@V?$vector@NV?$allocator@N@std@@@std@@NN@std@@@2@@std@@AAV?$vector@NV?$allocator@N@std@@@5@@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>ailib.cpp</FILENAME>
      <LINE>16</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26460</DEFECTCODE>
    <DESCRIPTION>The reference argument 'testData' for function 'ktstd::models::KNearestNeighbors::GetNearestK' can be marked as const (con.3).</DESCRIPTION>
    <FUNCTION>ktstd::models::KNearestNeighbors::GetNearestK</FUNCTION>
    <DECORATED>?GetNearestK@KNearestNeighbors@models@ktstd@@QBEPAV?$vector@V?$tuple@V?$vector@NV?$allocator@N@std@@@std@@NN@std@@V?$allocator@V?$tuple@V?$vector@NV?$allocator@N@std@@@std@@NN@std@@@2@@std@@AAV?$vector@NV?$allocator@N@std@@@5@@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>mathutils.cpp</FILENAME>
      <LINE>5</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26461</DEFECTCODE>
    <DESCRIPTION>The pointer argument 'point1' for function 'ktstd::Math::StdEuclideanDist' can be marked as a pointer to const (con.3).</DESCRIPTION>
    <FUNCTION>ktstd::Math::StdEuclideanDist</FUNCTION>
    <DECORATED>?StdEuclideanDist@Math@ktstd@@SANQAN0@Z</DECORATED>
    <FUNCLINE>5</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>mathutils.cpp</FILENAME>
      <LINE>5</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'point1': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>ktstd::Math::StdEuclideanDist</FUNCTION>
    <DECORATED>?StdEuclideanDist@Math@ktstd@@SANQAN0@Z</DECORATED>
    <FUNCLINE>5</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>mathutils.cpp</FILENAME>
      <LINE>10</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>ktstd::Math::StdEuclideanDist</FUNCTION>
    <DECORATED>?StdEuclideanDist@Math@ktstd@@SANQAN0@Z</DECORATED>
    <FUNCLINE>5</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>mathutils.cpp</FILENAME>
      <LINE>5</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'point1' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>ktstd::Math::StdEuclideanDist</FUNCTION>
    <DECORATED>?StdEuclideanDist@Math@ktstd@@SANQAN0@Z</DECORATED>
    <FUNCLINE>5</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>mathutils.cpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>ktstd::Math::StdEuclideanDist</FUNCTION>
    <DECORATED>?StdEuclideanDist@Math@ktstd@@SANV?$vector@NV?$allocator@N@std@@@std@@0@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>mathutils.cpp</FILENAME>
      <LINE>23</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ktstd::Math::StdEuclideanDist</FUNCTION>
    <DECORATED>?StdEuclideanDist@Math@ktstd@@SANV?$vector@NV?$allocator@N@std@@@std@@0@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>mathutils.cpp</FILENAME>
      <LINE>23</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ktstd::Math::StdEuclideanDist</FUNCTION>
    <DECORATED>?StdEuclideanDist@Math@ktstd@@SANV?$vector@NV?$allocator@N@std@@@std@@0@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>mathutils.cpp</FILENAME>
      <LINE>23</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ktstd::Math::StdEuclideanDist</FUNCTION>
    <DECORATED>?StdEuclideanDist@Math@ktstd@@SANV?$vector@NV?$allocator@N@std@@@std@@0@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>mathutils.cpp</FILENAME>
      <LINE>23</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ktstd::Math::StdEuclideanDist</FUNCTION>
    <DECORATED>?StdEuclideanDist@Math@ktstd@@SANV?$vector@NV?$allocator@N@std@@@std@@0@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>9</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'ktstd::FileUtilities::CSV::lenght' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::CSV::{ctor}</FUNCTION>
    <DECORATED>??0CSV@FileUtilities@ktstd@@QAE@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>14</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'ktstd::FileUtilities::CSV::Size' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::CSV::Size</FUNCTION>
    <DECORATED>?Size@CSV@FileUtilities@ktstd@@QAEHXZ</DECORATED>
    <FUNCLINE>14</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>54</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '&amp;this-&gt;linesOfData'. 'this.ktstd::FileUtilities::CSV::linesOfData' may have been invalidated at line 56 (lifetime.1).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::CSV::_QueryForBytes</FUNCTION>
    <DECORATED>?_QueryForBytes@CSV@FileUtilities@ktstd@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
        <FILENAME>file_utilities.cpp</FILENAME>
        <LINE>56</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>56</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '&amp;this-&gt;linesOfData'. 'this.ktstd::FileUtilities::CSV::linesOfData' may have been invalidated at line 56 (lifetime.1).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::CSV::_QueryForBytes</FUNCTION>
    <DECORATED>?_QueryForBytes@CSV@FileUtilities@ktstd@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
        <FILENAME>file_utilities.cpp</FILENAME>
        <LINE>56</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>59</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '&amp;this-&gt;linesOfData'. 'this.ktstd::FileUtilities::CSV::linesOfData' may have been invalidated at line 56 (lifetime.1).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::CSV::_QueryForBytes</FUNCTION>
    <DECORATED>?_QueryForBytes@CSV@FileUtilities@ktstd@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
        <FILENAME>file_utilities.cpp</FILENAME>
        <LINE>56</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>56</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.[]'. 'return of '[]'' may have been invalidated at line 56 (lifetime.1).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::CSV::_QueryForBytes</FUNCTION>
    <DECORATED>?_QueryForBytes@CSV@FileUtilities@ktstd@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
        <FILENAME>file_utilities.cpp</FILENAME>
        <LINE>56</LINE>
        <COLUMN>52</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>59</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.[]'. 'return of '[]'' may have been invalidated at line 59 (lifetime.1).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::CSV::_QueryForBytes</FUNCTION>
    <DECORATED>?_QueryForBytes@CSV@FileUtilities@ktstd@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
        <FILENAME>file_utilities.cpp</FILENAME>
        <LINE>59</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>56</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '*result.[]'. 'return of '[]'' may have been invalidated at line 56 (lifetime.1).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::CSV::_QueryForBytes</FUNCTION>
    <DECORATED>?_QueryForBytes@CSV@FileUtilities@ktstd@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
        <FILENAME>file_utilities.cpp</FILENAME>
        <LINE>56</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>56</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 1 '{InvalidLoc}' in call to 'std::vector&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::allocator&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back' may be invalid (lifetime.1).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::CSV::_QueryForBytes</FUNCTION>
    <DECORATED>?_QueryForBytes@CSV@FileUtilities@ktstd@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
        <FILENAME>file_utilities.cpp</FILENAME>
        <LINE>56</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>59</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 1 '{InvalidLoc}' in call to 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' may be invalid (lifetime.1).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::CSV::_QueryForBytes</FUNCTION>
    <DECORATED>?_QueryForBytes@CSV@FileUtilities@ktstd@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
        <FILENAME>file_utilities.cpp</FILENAME>
        <LINE>59</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>50</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: '&amp;this-&gt;linesOfData'. 'this.ktstd::FileUtilities::CSV::linesOfData' may have been invalidated at line 56 (lifetime.1).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::CSV::_QueryForBytes</FUNCTION>
    <DECORATED>?_QueryForBytes@CSV@FileUtilities@ktstd@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
        <FILENAME>file_utilities.cpp</FILENAME>
        <LINE>56</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>50</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26489</DEFECTCODE>
    <DESCRIPTION>Don't dereference a pointer that may be invalid: 'result.[]'. 'return of '[]'' may have been invalidated at line 50 (lifetime.1).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::CSV::_QueryForBytes</FUNCTION>
    <DECORATED>?_QueryForBytes@CSV@FileUtilities@ktstd@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
        <FILENAME>file_utilities.cpp</FILENAME>
        <LINE>50</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>38</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::CSV::_QueryForBytes</FUNCTION>
    <DECORATED>?_QueryForBytes@CSV@FileUtilities@ktstd@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>42</LINE>
      <COLUMN>72</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::CSV::_QueryForBytes</FUNCTION>
    <DECORATED>?_QueryForBytes@CSV@FileUtilities@ktstd@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>50</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::CSV::_QueryForBytes</FUNCTION>
    <DECORATED>?_QueryForBytes@CSV@FileUtilities@ktstd@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>56</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::CSV::_QueryForBytes</FUNCTION>
    <DECORATED>?_QueryForBytes@CSV@FileUtilities@ktstd@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>56</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::CSV::_QueryForBytes</FUNCTION>
    <DECORATED>?_QueryForBytes@CSV@FileUtilities@ktstd@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>59</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::CSV::_QueryForBytes</FUNCTION>
    <DECORATED>?_QueryForBytes@CSV@FileUtilities@ktstd@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>59</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::CSV::_QueryForBytes</FUNCTION>
    <DECORATED>?_QueryForBytes@CSV@FileUtilities@ktstd@@AAEXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>73</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::SplitString</FUNCTION>
    <DECORATED>?SplitString@FileUtilities@ktstd@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@D@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>80</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::SplitString</FUNCTION>
    <DECORATED>?SplitString@FileUtilities@ktstd@@QAE?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@D@Z</DECORATED>
    <FUNCLINE>65</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>106</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'length' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::ReadFileBinary</FUNCTION>
    <DECORATED>?ReadFileBinary@FileUtilities@ktstd@@QAEPBDPBD@Z</DECORATED>
    <FUNCLINE>98</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>127</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::ReadFileBinary</FUNCTION>
    <DECORATED>?ReadFileBinary@FileUtilities@ktstd@@QAEPBDPBD@Z</DECORATED>
    <FUNCLINE>98</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>110</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::ReadFileBinary</FUNCTION>
    <DECORATED>?ReadFileBinary@FileUtilities@ktstd@@QAEPBDPBD@Z</DECORATED>
    <FUNCLINE>98</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\dmitry\source\repos\ailib\ailib</FILEPATH>
      <FILENAME>file_utilities.cpp</FILENAME>
      <LINE>110</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26400</DEFECTCODE>
    <DESCRIPTION>Do not assign the result of an allocation or a function call with an owner&lt;T&gt; return value to a raw pointer, use owner&lt;T&gt; instead (i.11).</DESCRIPTION>
    <FUNCTION>ktstd::FileUtilities::ReadFileBinary</FUNCTION>
    <DECORATED>?ReadFileBinary@FileUtilities@ktstd@@QAEPBDPBD@Z</DECORATED>
    <FUNCLINE>98</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>